# Matthew Blanchard
# ECE 331
# Homework #3
# Due 2/5/2017

1(a): sudo apt-get update  # Retrieve updated list of packages
      sudo apt-get upgrade # Upgrade all packagaes

1(b): sudo git clone https://github.com/raspberrypi/linux.git

1(c): sudo git checkout remotes/origin/rpi-4.4.y_rebase

1(d): sudo mv /usr/src/linux /usr/src/linux_rpi-4.4.y_rebase

1(e): make mrproper
      modprobe configs
      sudo cp /proc/config.gz /usr/src/linux_rpi-4.4.y_rebase/.config
      sudo gunzip /usr/src/linux_rpi-4.4.y_rebase/.config/config.gz
      sudo ln -s /boot/Module7.symvers /usr/src/linux_rpi-4.4.y_rebase/Module.symvers
      sudo apt-get install bc
      sudo make modules_prepare      

1(f): sudo ln -s /lib/modules/4.4.38-v7+ /usr/src/linux_rpi-4.4.y_rebase/build

1(g): sudo ln -s /lib/modules/4.4.38-v7+ /usr/src/linux_rpi-4.4.y_rebase/source

2(a) Minimum match is [0-9], that is any single digit.

2(b) ([+-]?\d*\.?\d+)|([+-]?\d+\.?\d*) # Requires at least one digit, and
                                       # includes cases where all digits
                                       # are on side of the decimal or the
                                       # other.

3) Source code:

/* Matthew Blanchard
 * ECE 331
 * Due 2/9/2017
 *
 * Description: Matches input regular expression to stdin and 
 * prints matching lines to stdout
 *
 * Arguments: 
 *      argv[1]: Regular expression to match
 */

#include <regex.h>
#include <stdlib.h>
#include <stdio.h>

int main(int argc, char *argv[]) {
        
        char **line = NULL;       // Line read from stdin
        size_t lsize = 256;       // Initial size of line buffer
        regex_t *preg;            // RE buffer 

        preg = (regex_t *)malloc(sizeof(*preg));
        line = (char **)malloc(lsize);

        // Expecting a single string as an argument (the RE)
        if (argc != 2){
                printf("Error: Expected a single regular expression for an argument\n");
                return 1;
        }
        
        // Compile regular expression
        if (regcomp(preg, argv[1], REG_NOSUB|REG_EXTENDED) != 0) {
                printf("Error: Invalid regular expression\n");
                return 2;
        }

        // Scan for input and print matches
        while (getline(line, &lsize, stdin) != -1) {
                if (regexec(preg, *line, (size_t)0, NULL, 0) != REG_NOMATCH)
                        printf("%s", *line);
        }

        regfree(preg);
        free(preg); 
        free(line);
        return 0;
}

4) Command: 
cat test.txt | ./match "([+-]?[[:digit:]]*\.?[[:digit:]]+)|([+-]?[[:digit:]]+\.?[[:digit:]]*)"

Test file (text.txt):    
NaN
-1
+1
89
Test
9.8
-.084
+8.
Te-67.83-st
0
100.0
Infinity
ABC
56.89
0.0
+0.0
555555555.5555555555
DEF
8.745

5) apt-cache pkgnames | grep [[:digit:]] | wc

6) (\b100\b)|(\b[[:digit:]]{1,2}\b)

7) Entered within the man page:
   /^\s*-Wselector

